substitutions:
  devicename: "ahub-ato-level"

esphome:
  name: $devicename
  friendly_name: $devicename

esp8266:
  #board: esp12e
  board: esp01_1m  

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "L0Oo8fcaWIG1qd6TSsVToFUe2f5uruuICeOmYxAIDIA="

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: $devicename
    password: "EuW0QOIOEpgq"

captive_portal:

web_server:
  port: 80
      
time:
  - platform: homeassistant
    id: homeassistant_time

mqtt:
  broker: 192.168.1.11
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: false

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: $devicename Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: $devicename IP
    bssid:
      name: $devicename BSSID
  - platform: template
    name: "AHub ATO Main Water Level Status"
    id: "ahub_ato_main_water_level_status"
    lambda: |-
      if (id(ahub_ato_main_water_level_sensor).state) {
        return {"wet"};
      } else {
        return {"dry"};
      }

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: $devicename Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: $devicename WiFi Signal
    update_interval: 60s    

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
    name: "AHub ATO Main Water Level"
    id: ahub_ato_main_water_level_sensor
    #internal: true
    on_press:
      - mqtt.publish:
          topic: ahub/sump/ahub_ato_main_water_level_sensor/out
          payload: "wet"
      - lambda: |-
          id(ahub_ato_main_water_level_status).publish_state("wet");
    on_release:
      - mqtt.publish:
          topic: ahub/sump/ahub_ato_main_water_level_sensor/out
          payload: "dry"
      - lambda: |-
          id(ahub_ato_main_water_level_status).publish_state("dry");